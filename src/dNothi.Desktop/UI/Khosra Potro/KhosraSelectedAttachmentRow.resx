<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACcAAAAgCAYAAACRpmGNAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAARmSURBVFhHvZhBaNtWGMfdklC2QMigdGWFFlMoYzmN
        wG457FQKvuyUQ3bKaZcR6D0559LcjIsPBtMcDAWDLayY2LWzfshGU4XVyrGCJtSstdPOCcnokhLYytt7
        kq086T07zqLs8DPS03vf9/df37M+OYIQCh3j7f5V3vh54Q6Oit5sjpUl9V5GlOYTOYj7EBtx4whdSCR3
        kIesNCbzz+qzKQGWA0LQIJLSzmp/vW5YYw4v9fGC1JhxUMwZOkcQZmCIG1wBw5Hj8iGaJHGLAsxw5uC4
        crzWRdeDOggR9G77alaEB+7Eiwjhk6q9WSaJ9tT6F7zrhGTtjecwTcR4Djd5C8JDiWtH6BpJls3BCnfO
        RiseFEaInLTUz/CEUN0KklZ2MyRZW6l/z7ueyOHNg9jN43xU1+Eb/qKwUEH7iKbRkTnFd6+O4B36kivu
        QJMn8aRLdW9N7T4hueyadJ93Pbt1/IAWRvAOBuymiwAJUYGq2phL5yCTEHVwch22bmVy8Dg4P/Vr29k4
        NN7BsN00AhBkTbIcp3iYksS6V95mNoXvBNcD+UnxLxqBfOtgiY5jvt2fos9Rp3XraVF6lChoYH9C46jb
        jK7l4IkvjqANF4d306juOe6kSqpQVq0F02r7xOztWBOGtXODHBuGdUM3mtGngrs2u/VhhYxrmxCj4mFk
        VNvz/xh7Bw5H5pUB7jlikiW1UlbNBXv3r3F6nfFCm6510H16rM9xx5ooblCx1nu119GjTi1SefImmqXX
        +gIR8G66jieSnQvJolLJK9tL9u4Hnxj7pR7Fz9mlZB4qZJ7DugwZER5nt7quMxWIpSq6AJIcS1ICyNxs
        65jrXvrF+0U6j3cwDLvZjJY35QWfGCpoAEiWlQpTUzTFputeO+BexfTVnU9En5M/zCvVTXkOdyACXnSW
        mP+ABEX7759JLrkMP3jjon62OFwPY/gbLfoDhkyp5bpna9P4tpM7gseVuPyn28UQWGE9cD18xQQMFeze
        6557JZjrjxcs5PV4jCiP9v/gXsV03DsxG557a439n/oaWFEUuB7uMAFDpQ7VDpojuXDzseCMPbe9umME
        +bC1a/gbrbJBQ2TTct1rqd/ic8A7eURxGFwPUSZgqNQBuihGcrnu4eb0o9uccgXR4Hq4dPfwi1CF5Dp4
        pXyHNwqqttFtcs4VFOTym9EGmAhNoU/2eD4HS5lXh/MkL1dMkEtu5YF0K/1cUIQfE+BuCkbIIEJwr/+k
        gYQgQfqZmiko2w/11++j/Rz/7OpuK9V74WFEDALXwwQOPKp7npCUKAtZSVuBpu0UfZDffzOnoN6IZUsS
        ebfoPSbdFx5m8jBgA+7ixbTAUzcKrhukpaLdoMFv+9HCL8rDdMF52J+uPY3Xw33hYQKchaqon2eKynxe
        0mdlw/aegzS0G4FOhiOED+ntmMDnxfnvg7ghSme4cR7qcfzkuM1NeB7KG/A1DkhuNUNSlFZTorTMA5fA
        oveHDk29OaN3DscQQpF/AVHkWynUY3+YAAAAAElFTkSuQmCC
</value>
  </data>
</root>